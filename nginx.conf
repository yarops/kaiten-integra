server {
    listen 80;
    server_name localhost;
    root /kaiten-integra/dist;
    index index.html;

    # Environment variables for API configuration (from Docker environment)
    set $kaiten_api_url "${KAITEN_API_URL}";
    set $kaiten_api_token "${KAITEN_API_TOKEN}";
    set $supabase_url "${SUPABASE_URL}";
    set $supabase_anon_key "${SUPABASE_ANON_KEY}";

    # Serve static files
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Proxy API requests to Kaiten
    location /api/ {
        proxy_pass https://yarops.kaiten.ru/api/;
        proxy_set_header Host yarops.kaiten.ru;
        proxy_set_header Authorization "Bearer $kaiten_api_token";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept";
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
    }

    # Proxy Supabase API requests
    location /supabase/ {
        proxy_pass https://rfdnjjxvtqzxxrqzgnvg.supabase.co/;
        proxy_set_header Host rfdnjjxvtqzxxrqzgnvg.supabase.co;
        proxy_set_header apikey "$supabase_anon_key";
        proxy_set_header Authorization "Bearer $supabase_anon_key";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # SSL settings for upstream
        proxy_ssl_verify off;
        proxy_ssl_protocols TLSv1.2 TLSv1.3;
        proxy_ssl_ciphers HIGH:!aNULL:!MD5;
        proxy_ssl_server_name on;
        
        # CORS headers
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept, apikey";
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept, apikey";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
    }
}
